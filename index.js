import{a as y,i as p,S as b}from"./assets/vendor-D73Uttp0.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function i(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(e){if(e.ep)return;e.ep=!0;const r=i(e);fetch(e.href,r)}})();const L=async(s,t)=>(await y.get("https://pixabay.com/api/",{params:{key:"46731058-8e313f89df23f954200132c0b",q:s,page:t,per_page:15,image_type:"photo",orientation:"horizontal",safesearch:!0}})).data,w=s=>s.map(({webformatURL:t,largeImageURL:i,tags:n,likes:e,views:r,comments:o,downloads:g})=>`
    <li class="general-list-item" >
        <a href="${i}"><img src="${t}" alt="${n}"></a>
        <div>
            <p class="general-list-item-p" ><b>Likes</b><span>${e}</span></p>
            <p class="general-list-item-p" ><b>Views</b><span>${r}</span></p>
            <p class="general-list-item-p" ><b>Comments</b><span>${o}</span></p>
            <p class="general-list-item-p" ><b>Downloads</b><span>${g}</span></p>
        </div>
    </li>
    `).join("");document.querySelector("main");const m=document.forms.searchForm,v=m.elements.input,a=m.elements.submitButton,u=document.querySelector(".general-list"),l=document.querySelector("button[data-more]"),f=document.getElementById("loader"),q=15;let d,c;function S(){f.classList.remove("hidden")}function P(){f.classList.add("hidden")}async function h(s,t){S(),l.hidden=!0;try{const i=await L(s,t);if(!i.hits.length)throw new Error("Sorry, there are no images matching your search query. Please, try again");const n=w(i.hits);t===1?u.innerHTML=n:u.insertAdjacentHTML("beforeend",n),$.refresh(),t*q>=i.totalHits?(l.hidden=!0,p.info({message:"We're sorry, but you've reached the end of search results.",position:"topRight"})):(l.hidden=!1,d+=1)}finally{P()}}a.addEventListener("click",async s=>{if(s.preventDefault(),c=v.value.trim(),!!c){a.disabled=!0,d=1,u.innerHTML="";try{await h(c,d)}catch(t){p.error({message:t.message,position:"topRight"})}finally{a.disabled=!1}}});l.addEventListener("click",async()=>{a.disabled=!0;try{await h(c,d);const s=document.querySelector(".general-list-item").getBoundingClientRect().height;scrollBy({top:s*2+32,behavior:"smooth"})}catch(s){p.info({message:s.message,position:"topRight"})}finally{a.disabled=!1}});const $=new b(".general-list a",{captionsData:"alt",captionDelay:250});
//# sourceMappingURL=index.js.map
